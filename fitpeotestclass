import org.openqa.selenium.By;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;

public class FitPeoAutomation {
    public static void main(String[] args) {
        // Initialize ChromeDriver directly (assumes ChromeDriver is installed via NuGet or PATH variable)
        WebDriver driver = new ChromeDriver();
        WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));

        try {
            // Step 1: Navigate to the FitPeo Homepage
            driver.get("https://fitpeo.com");
            driver.manage().window().maximize();

            // Step 2: Navigate to the Revenue Calculator Page
            WebElement revenueCalculatorLink = wait.until(
                ExpectedConditions.elementToBeClickable(By.xpath("//span[contains(text(),'Revenue Calculator')]"))
            );
            revenueCalculatorLink.click();

            // Step 3: Scroll to the Slider Section
            JavascriptExecutor js = (JavascriptExecutor) driver;
            WebElement sliderSection = wait.until(
                ExpectedConditions.presenceOfElementLocated(By.xpath("//span[contains(@class, 'MuiSlider-rail')]"))
            );
            js.executeScript("arguments[0].scrollIntoView(true);", sliderSection);

            // Step 4: Adjust the Slider to 820
            WebElement sliderInput = driver.findElement(By.xpath("//input[@type='range']"));
            js.executeScript("arguments[0].value=820;", sliderInput);
            Thread.sleep(1000); // Pause to let the value update visually

            // Step 5: Validate Slider Value
            WebElement sliderValueField = driver.findElement(By.xpath("//input[@type='number' and @aria-invalid='false']"));
            sliderValueField.clear();
            sliderValueField.sendKeys("560");
            Thread.sleep(1000); // Pause for the slider to adjust
            if (!sliderInput.getAttribute("value").equals("560")) {
                throw new AssertionError("Slider position did not update to 560.");
            }

            // Step 6: Select CPT Codes
            By[] checkboxes = {
                By.xpath("(//input[@type='checkbox'])[1]"),
                By.xpath("(//input[@type='checkbox'])[2]"),
                By.xpath("(//input[@type='checkbox'])[3]"),
                By.xpath("(//input[@type='checkbox'])[8]")
            };
            for (By checkbox : checkboxes) {
                WebElement element = driver.findElement(checkbox);
                if (!element.isSelected()) {
                    element.click();
                }
            }

            // Step 7: Validate Total Recurring Reimbursement
            WebElement totalReimbursementHeader = wait.until(
                ExpectedConditions.presenceOfElementLocated(
                    By.xpath("//p[contains(text(),'Total Recurring Reimbursement')]")
                )
            );
            String expectedReimbursement = "$110700";
            if (!totalReimbursementHeader.getText().contains(expectedReimbursement)) {
                throw new AssertionError("Reimbursement value is incorrect.");
            }

            // Success
            System.out.println("All test cases passed successfully!");

        } catch (Exception e) {
            // Handle exceptions and print the stack trace for debugging
            e.printStackTrace();
        } finally {
            // Ensure the browser is closed at the end
            driver.quit();
        }
    }
}
